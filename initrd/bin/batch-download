#!/bin/bash

set -o braceexpand
set -o errexit
set -o errtrace

if [ $# -lt 1 ]; then
    echo "Error: missing arguments!"
    exit 1
fi
DIR=$1

if alias -p | grep -E "alias (cp|mv|which)" >/dev/null; then
    unalias cp
    unalias mv
    unalias which
fi

_top=$(cd $(dirname $0)/..; pwd)
_SOURCE_DIR=$(readlink -n -f "$_top")
_LIST="$_SOURCE_DIR/config/download.list"
_SRCDIR="$DIR/sources"

function _download() {
    local url="$1"
    local name="$2"
    local WGET_BIN WGET_CMD

    WGET_BIN=`which wget`
    WGET_CMD="wget --show-progress --inet4-only -c -L -O"

    echo "==> Trying download $url"
    if [[ x"$WGET_BIN" == x ]]; then
        echo "wget command not found"
        return 1
    fi

    $WGET_CMD "$name" "$url"
    if [ $? -ne 0 ]; then
        echo 'Cannot be download with wget'
        return 1
    fi

    return
}

function _is_valid_sum() {
    local file="$1"
    local sum="$2"
    
    if [[ "$sum" != "$(sha256sum -b $file | awk '{print $1}')" ]]; then
        return 1
    fi

    return
}

function _fetch_one() {
    local record index fsum site
    local name version suffix file
    local url dest

    declare -a record=($@)

    index="${record[0]}"
    fsum="${record[1]}"
    site="${record[2]}"

    name=$(echo "$index" | cut -d# -f 1)
    version=$(echo "$index" | cut -d# -f 2)
    suffix=$(echo "$index" | cut -d# -f 3)
    file="${name}-${version}.${suffix}"

    url="https://static.oomol.com/ovm/initrd-deps/${file}"
    # url=$(eval echo ${site%*/}/${file})
    dest="${_SRCDIR}/${file}"

    if [ -f "$dest" ]; then
        _is_valid_sum "$dest" "$fsum" && return
    fi

    if _download "$url" "$dest" ; then
        echo -e "==> Successfully download $file !\n"
    else
        echo -e "==> Download $file failed !\n"
        exit 1
    fi

    return
}


main() {
    if [ "$#" -eq 1 ]; then
        while IFS= read -r line ; do
            [ -n "$line" ] && _fetch_one $line
        done < "$_LIST"

        exit 0
    fi

    local target="$2"

    local record="$(grep -E "^${target}\#" "$_LIST")"

    [[ x"$record" != x ]] && _fetch_one $record
}

main $@
